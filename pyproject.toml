[tool.poetry]
name = "cv"
version = "0.1.0"
description = ""
authors = ["ilyakochankov <ilyakochankov@yandex.ru>"]

[tool.poetry.dependencies]
python = "3.9.8"
matplotlib = "^3.4.3"
scikit-learn = "^1.0.1"
numpy = "^1.21.3"
Flask = "^2.0.2"
flask-apispec = "^0.11.0"
marshmallow = "^3.14.0"
gunicorn = "^20.1.0"
py-healthcheck = "^1.10.1"
environs = "^9.3.4"
Pillow = "^8.4.0"
mediapipe = "^0.8.8"
six = "^1.16.0"
Flask-Cors = "^3.0.10"
typing-extensions = "^3.10.0"
opencv-python-headless = "^4.5.4"

[tool.poetry.dev-dependencies]
pylint = "2.9.3"
pylint-json2html = "^0.3.0"
isort = "^5.9.3"
black = "21.5b1"
pyproject-flake8 = "^0.0.1-alpha.2"
flake8-html = "^0.4.1"
pytest = "^6.2.5"
coverage = "^6.1.2"
pytest-github-actions-annotate-failures = "^0.1.5"
bandit = "^1.7.1"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"


[tool.yapf]
based_on_style = "pep8"

[tool.pylint.'MASTER']
ignore = ".venv, Dockerfile, Procfile, poetry.lock, pyproject.toml, __init__.py, test_cv.py"

[tool.pylint.'REPORTS']
output-format = "json"

[tool.pylint.messages_control]
max-line-length = 120
disable = [
    "missing-docstring",
    "import-outside-toplevel",
    "invalid-name",
    "too-few-public-methods",
    "no-member",
    "no-name-in-module",
    "c-extension-no-member",
    "duplicate-code",
    "inconsistent-return-statements"
]

[tool.isort]
profile = "black"

[tool.flake8]
ignore = ["E203", "W503"]
max-line-length = 120
format = "html"
htmldir = "flake-report"
exclude = [".venv", "api/v1/cv/__init__.py", "api/v2/cv/__init__.py"]

[tool.pytest.ini_options]
minversion = "6.0"
testpaths = [
    "tests",
]

[tool.bandit]
exclude_dirs = ["tests"]
